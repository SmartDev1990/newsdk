{"code":"import { RICE_ADDRESS, SUSHI_ADDRESS, USDC_ADDRESS, WNATIVE_ADDRESS } from './addresses';\r\nimport { ChainId } from '../enums';\r\nimport { Token } from '../entities/Token';\r\nexport const USDC = {\r\n    [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, USDC_ADDRESS[ChainId.ETHEREUM], 6, 'USDC', 'USD Coin'),\r\n    [ChainId.BITGERT]: new Token(ChainId.BITGERT, USDC_ADDRESS[ChainId.BITGERT], 6, 'USDC', 'USD Coin'),\r\n    [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\r\n    [ChainId.MATIC_TESTNET]: new Token(ChainId.MATIC_TESTNET, USDC_ADDRESS[ChainId.MATIC_TESTNET], 6, 'USDC', 'USD Coin'),\r\n    [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\r\n};\r\nexport const USD = {\r\n    ...USDC,\r\n    [ChainId.BITGERT]: new Token(ChainId.BITGERT, USDC_ADDRESS[ChainId.BITGERT], 6, 'USDC', 'USD Coin'),\r\n};\r\nexport const WNATIVE = {\r\n    [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, WNATIVE_ADDRESS[ChainId.ETHEREUM], 18, 'WETH', 'Wrapped Ethereum'),\r\n    [ChainId.BITGERT]: new Token(ChainId.BITGERT, WNATIVE_ADDRESS[ChainId.BITGERT], 18, 'WBRISE', 'Wrapped Brise'),\r\n    [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\r\n    [ChainId.MATIC_TESTNET]: new Token(ChainId.MATIC_TESTNET, WNATIVE_ADDRESS[ChainId.MATIC_TESTNET], 18, 'WMATIC', 'Wrapped Matic'),\r\n    [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\r\n    [ChainId.BSC_TESTNET]: new Token(ChainId.BSC_TESTNET, WNATIVE_ADDRESS[ChainId.BSC_TESTNET], 18, 'WBNB', 'Wrapped BNB'),\r\n};\r\nexport const RICE = {\r\n    [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, SUSHI_ADDRESS[ChainId.ETHEREUM], 18, 'SUSHI', 'SushiToken'),\r\n    [ChainId.BITGERT]: new Token(ChainId.BITGERT, RICE_ADDRESS[ChainId.BITGERT], 18, 'RICE', 'RiceToken'),\r\n    [ChainId.MATIC]: new Token(ChainId.MATIC, SUSHI_ADDRESS[ChainId.MATIC], 18, 'SUSHI', 'SushiToken'),\r\n    [ChainId.BSC]: new Token(ChainId.BSC, SUSHI_ADDRESS[ChainId.BSC], 18, 'SUSHI', 'SushiToken'),\r\n};\r\n//# sourceMappingURL=tokens.js.map","references":["D:/360/quickswap/newsdk/src/types/index.ts","D:/360/quickswap/newsdk/src/constants/addresses.ts","D:/360/quickswap/newsdk/src/enums/index.ts","D:/360/quickswap/newsdk/src/entities/Token.ts"],"map":"{\"version\":3,\"file\":\"tokens.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/constants/tokens.ts\"],\"names\":[],\"mappings\":\"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\"}"}
