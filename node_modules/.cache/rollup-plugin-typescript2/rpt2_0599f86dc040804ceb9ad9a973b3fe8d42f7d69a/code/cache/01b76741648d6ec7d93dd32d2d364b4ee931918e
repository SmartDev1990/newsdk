{"code":"import { keccak256, pack } from '@ethersproject/solidity';\r\nimport { INIT_CODE_HASH } from '../constants';\r\nimport { getCreate2Address } from '@ethersproject/address';\r\nexport const computePairAddress = ({ factoryAddress, tokenA, tokenB, }) => {\r\n    const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]; // does safety checks\r\n    return getCreate2Address(factoryAddress, keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]), INIT_CODE_HASH[token0.chainId]);\r\n};\r\n//# sourceMappingURL=computePairAddress.js.map","references":["D:/360/quickswap/newsdk/node_modules/@ethersproject/solidity/lib/index.d.ts","D:/360/quickswap/newsdk/src/constants/index.ts","D:/360/quickswap/newsdk/src/entities/Token.ts","D:/360/quickswap/newsdk/node_modules/@ethersproject/address/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"computePairAddress.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/functions/computePairAddress.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,yBAAyB,CAAA;AAEzD,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAA;AAE1D,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,EACjC,cAAc,EACd,MAAM,EACN,MAAM,GAKP,EAAU,EAAE;IACX,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA,CAAC,qBAAqB;IAC/G,OAAO,iBAAiB,CACtB,cAAc,EACd,SAAS,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACtF,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAC/B,CAAA;AACH,CAAC,CAAA\"}"}
